flag = "idek{...}"

assert(arg[0] == "moon.lua", "Run me as 'lua moon.lua'")
assert(_VERSION == "Lua 5.1", "Unsupported Lua version (5.1 needed)")
assert(0xfffffffff ~= 0xffffffff, "Unsupported architecture (x64 needed)")

function from_hex(data)
    return data:gsub("(%x%x)", function(x) return string.char(tonumber(x, 16)) end)
end

file_loader, err = loadstring(from_hex([[1b4c75615100010408040800000000000000000000000000000000000000020f3c00000005000000454000004680c000a40000000000800000000000c0000001dc8080000181000045c10000800180015c010101160000800c014102618100001600ff7f454101004681c10281c10100c10102005cc18001c54102005780420316000080024200000202800041c20200dc418001cb01c30241420300dc818001054202005780c30316000080424200004202800081c203001c4280010a0200004182000081020400c102010060020180454304004683c406800300065c830001094203065f42fe7f644200000000000400000000a482000000008002000000040000800400008001000000029e0200011e008000130000000406000000000000007461626c6500040400000000000000617267000300000000000000000407000000000000006970616972730003000000000000f03f040300000000000000696f000405000000000000006f70656e00040a000000000000006d6f6f6e2e6964656b000403000000000000007262000407000000000000006173736572740000042200000000000000756e61626c6520746f206f70656e20746865206d6f6f6e2e6964656b2066696c650004050000000000000072656164000300000000000010400405000000000000004944454b00042000000000000000746865206d6f6f6e2e6964656b2066696c6520697320636f7272757074656400030000000000e06f40040700000000000000737472696e6700040500000000000000636861720003000000000000000000000000000000000000000200000f50000000050000000640400044000000818000001cc0800185c000005700c10016000080c2400000c2008000014101009c4080018b8041009c800001c5c000000001000141c10100dc408001c5000200c640c20100010001dc8000010501020006414202458102001c8100010c0181855700810116c00080ca00800001010300e2408000de000001ca000000010103004b8141005c8100011700c10216000080164002800c4143028401800086814303c00180010502020006424204400280021c0200019c4100001600fc7f4501000046c1c302800100005c4100014101030085010400c00180019c010101160000804c818202a18100001600ff7f8a010000c501040000028001dc010101160002800403800006834306400300038c43c3058e8303028e430107904344078c4343071c438001e18100001600fd7f9e0100011e00800012000000040300000000000000696f000405000000000000006f70656e0004020000000000000072000407000000000000006173736572740000041800000000000000756e61626c6520746f206f70656e207468652066696c65000405000000000000007265616400040c00000000000000656d7074792066696c653f00040700000000000000737472696e67000404000000000000006c656e00040500000000000000666c61670003000000000000224003000000000000000003000000000000f03f040700000000000000696e7365727400040600000000000000636c6f73650004070000000000000069706169727300030000000000e06f400000000000000000000000000000000000000000000000000000000000000000020200083100000081000000c140000018008080168003801840808016000380108140005081c0005740010216000080cc8080018d0101008f814003cd418100cf81c0038e80400140008003000000031680fb7f0401000006c14002440100004601c1028401000086414103c4010000c681c10315c1010244018000a40100000400000004008000498101021840000016000080000080001800808016000280508140001840818016000080cc8080018d4101008f8140038e804001000000031600fd7fde0000011e0080000700000003000000000000f03f030000000000000000030000000000000040030000000000c05c40030000000000c05b40030000000000805c40030000000000005d4001000000000000000000000000000000000000000200030713000000440000004600c0008400000086404001c4000000c680c00104010000060140024401000046c1c0028401000086014103558081008400800086400001e50000009d0000009e0000001e00800005000000030000000000c05840030000000000c05b40030000000000805b40030000000000405840030000000000005d4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000f2c00000001000000440000004b40c000c18000005c8080015a4000001600008016c0078085c0000086004101c00080009c800001c4000000cb40c00140010001dc808001014101004b81c101c1c101005c01810116c003804002000084028000c402000105c3000006034106400300041c8300014403800184030002908303028c83038146838306dc82800186c20205158082040c814002614100001640fb7f1600f67f42008000470002001e0000011e0080000900000004010000000000000000040500000000000000726561640003000000000000f03f040700000000000000737472696e67000405000000000000006279746500030000000000000000040700000000000000676d61746368000402000000000000002e000407000000000000006c6f616465640000000000000000000000000000000000000000000000000000000000]]), "file_loader")()
assert(err == nil, "something went really wrong")

function check_flag(...)
    local res, err = load(file_loader, "flag_checker")
    assert(err == nil, "something went wrong")

    return res(...)
end

assert(check_flag()(flag), "flag is wrong :(")
